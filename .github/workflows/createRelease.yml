name: Создать релиз

on: workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.15.1
        uses: actions/setup-node@v3
        with:
          node-version: "20.15.1"
          cache: "npm"
      - run: npm ci
      - run: npm test

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.15.1
        uses: actions/setup-node@v3
        with:
          node-version: "20.15.1"
          cache: "npm"
      - run: npm ci
      - run: npm run lint

  createRelease:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Проверка репозитория
        uses: actions/checkout@v4

      - name: Авторизация в GitHub
        run: |
          git config --global user.email "yaroslav.patrikeev@gmail.com"
          git config --global user.name "Yaroslav"

      - name: Создание релизной ветки и тега
        run: |
          git checkout -b releases/${{ github.run_number }}
          git push origin releases/${{ github.run_number }}
          git tag -a v${{ github.run_number }} -m 'Релиз ${{ github.run_number }}'
          git push origin --tags

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Авторизация в Docker
        run: |
          docker login \
            --username oauth \
            --password ${{ secrets.PASSWORD }} \
            cr.yandex

      - name: Создание основного образа и push
        run: |
          docker build -t cr.yandex/crp4eluf48bv0u242o2t/app:${{ github.run_number }} .
          docker push cr.yandex/crp4eluf48bv0u242o2t/app:${{ github.run_number }}

      - name: Добавление тега _latest и push
        run: |
          docker tag cr.yandex/crp4eluf48bv0u242o2t/app:${{ github.run_number }} cr.yandex/crp4eluf48bv0u242o2t/app:${{ github.run_number }}_latest
          docker push cr.yandex/crp4eluf48bv0u242o2t/app:${{ github.run_number }}_latest
      - name: Create Release Label
        run: |
          gh label create "релиз ${{ github.run_number }}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Создание Issue
        run: |
          touch $ISSUE
          echo "## Отчет о релизе" >> $ISSUE
          echo "- Дата: $(date)" >> $ISSUE
          echo "- Автор релиза: ${{ github.triggering_actor }}" >> $ISSUE
          echo "- Номер версии: ${{ github.run_number }}" >> $ISSUE
          echo "- Список коммитов:" >> $ISSUE
          git log --pretty=oneline >> $ISSUE
          echo "- Ссылка на docker-образ: cr.yandex/crp4eluf48bv0u242o2t/app:${{ github.run_number }}" >> $ISSUE
          gh issue create --title "Релиз ${{ github.run_number }}" --body-file $ISSUE --label "релиз ${{ github.run_number }}"
          rm $ISSUE
        env:
          ISSUE: issue.txt
          GH_TOKEN: ${{ github.token }}

      - name: Обновление файла CHANGELOG.md
        run: |
          touch $TEMP
          cat $CHANGELOG > $TEMP
          touch $CHANGELOG
          echo "## ${{ github.run_number }}" >> $CHANGELOG
          git log --pretty=oneline >> $CHANGELOG
          cat $TEMP >> $CHANGELOG
          rm $TEMP
          cat $CHANGELOG
          git add CHANGELOG.md
          git commit -m "Обновление changelog в связи с релизом ${{ github.run_number }}"
          git push origin releases/${{ github.run_number }}
        env:
          CHANGELOG: CHANGELOG.md
          TEMP: CHANGELOG_TEMP.md
